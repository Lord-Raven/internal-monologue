# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the stage.
project_name: "Internal Monologue"

# A short tagline to show in search.
tagline: "Empower thoughtful bots--who keep those thoughts to themselves."

creator_notes: "***Warning: This stage does not currently persist the user's pre- or post-history prompt to the LLM for its prompts;
if you rely on a jailbreak in these settings, this stage will NOT honor it. As a result, please do not include this stage 
directly on character cards at this time.***
<br>
<br>
That said, if you still want to use it with your jailbreak, you should be able to edit the character you're chatting with 
and apply your jailbreak directly to them--those elements will be persisted to the LLM. Hopefully, I'll be able to address 
this with the next wave of stage improvements.
<br>
<br>
**What It Does:**
<br>
This stage introduces a behind-the-scenes concept of internal character monologues. Before each response, 
the stage submits an additional prompt to the LLM to gather the next character's personal thoughts on their situation,
current goals, and possible next moves. These thoughts are then fed back into the character's response prompt with
instruction to tacitly consider and act upon them where appropriate.
<br>
<br>
The upshot is that characters should more consistently adhere to their personalities and plans, making more thoughtful
choices without sharing those thoughts with the user--which is great if they have ulterior motives to maintain.
<br>
<br>
**Usage Notes:**
<br>
The monologue is generated after each user input, which entails an additional call to the LLM. Generally, these
calls are lighter than others, because only the last several chat messages are (currently) included. Because the monologue 
is generated per-input, swipes may yield similar results, as the bot's thoughts are already established. Furthermore, if
you edit your input, those changes will not be reflected in the monologue.
<br>
<br>
If you don't mind spoilers--or just need to know what on Earth the bot was thinking--, every generated monologue is 
output to the browser's console.
<br>
<br>
The stage currently does some hacky things to construct chat history, and as a result, it will not be aware of events 
that occurred prior to being added to a chat, so you may initially see wonky results when adding it in medias res. The 
stage also has no awareness of character or lore books and if you swipe intros after adding the stage, it won't pick up
on the correct intro for its own history tracking (but you can swipe intros and then add the stage).
<br>
<br>
These shortcoming (and the post-history issue above) will 
hopefully be resolvable when stages receive the planned prompt templating support."

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'UNLISTED'

# 'ADJACENT' | 'NONE' | 'COVER' | 'FULLSCREEN'
# 'ADJACENT' is default. The frame will display on the side of the
#   chat on desktop and above/in the top half of the chat on mobile.
# 'NONE' will not display, only run.
# 'COVER' will, indeed, cover the chat history completely,
#   but leave the text input box.
# 'FULLSCREEN' will make nothing below the header bar
#   show except for your stage.
position: 'NONE'

# Self-explanatory.
tags:
  - 'Extension'
  - 'Enhancement'
  - 'Add-On'
  - 'Background'

# The schema of any user-supplied config.
# If your stage requires a configuration but has no
#   defined schema, it won't work.
# config_schema:
#  title: Internal Monologue Settings
#  type: object
#  properties:
#    perSwipeMode:
#      title: Monologue Generation Point
#      description: Determines whether the monologue is generated per user input (conserve requests and reduce per-swipe overhead) or per swipe (more dynamic swipe results).
#      type: string
#      default: Per Swipe
#      enum: ["Per Input", "Per Swipe"]

# The schema of the state that you store.
# This isn't needed even if you do store state,
#   and is here more for future use cases to
#   optimize storage.
state_schema:
  init:
    type: object
  message:
    type: object
    properties:
      monologue:
        type: string
  chat:
    type: object

# Whether to publish as 'Anonymous' instead of under your username.
# is_anonymous: false

# Self-explanatory.
# ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
# permissions:

# extension_id is automatically generated on push with a new project;
#    you should not make or set this value.
# github_path will be added if it does not exist. It is the URL of the repo.


github_path: 'https://github.com/Lord-Raven/internal-monologue'


extension_id: 'internal-monologue-d50aac26e9ee'

